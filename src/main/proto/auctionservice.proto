syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.cash.grpc.auctionservice";
option java_outer_classname = "AuctionServiceProto";

package auctionservice;

import "google/protobuf/timestamp.proto";

// Message Definitions

message Bid {
  int32 bid_id = 1;
  int32 user_id = 2;
  int32 catalogue_id = 3;
  int32 amount = 4;
  google.protobuf.Timestamp bid_time = 5;
}

// Place Bid Request
message PlaceBidRequest {
  int32 user_id = 1;
  string username = 2;
  int32 catalogue_id = 3;
  int32 amount = 4;
}

// Place Bid Response
message PlaceBidResponse {
  bool success = 1;
  string message = 2;
}

message GetAuctionEndRequest {
  int32 catalogue_id = 1;
}

message GetAuctionEndResponse {
  bool found = 1;
  google.protobuf.Timestamp end_time = 2;
  string message = 3;
}

message GetAuctionStatusRequest {
  int32 catalogue_id = 1;
}

message GetAuctionStatusResponse {
  bool success = 1;
  int32 highest_bidder = 2;
  int32 current_amount = 3;
  int32 remaining_time = 4;
  string message = 5;
}

message GetAuctionWinnerRequest {
  int32 catalogue_id = 1;
}

message GetAuctionWinnerResponse {
  bool found = 1;
  int32 winner_user_id = 2;
  int32 final_price = 3;
  string message = 4;
}

message GetBidHistoryRequest {
  int32 catalogue_id = 1;
}

message GetBidHistoryResponse {
  bool success = 1;
  repeated Bid bid_history = 2;
  string message = 3;
}

message StartAuctionRequest {
  int32 user_id = 1;
  int32 catalogue_id = 2;
  int32 starting_amount = 3;
  google.protobuf.Timestamp end_time = 4;
}

message StartAuctionResponse {
  bool success = 1;
  string message = 2;
}

// Auction Service Definition
service AuctionService {
  rpc PlaceBid(PlaceBidRequest) returns (PlaceBidResponse);

  rpc GetAuctionEnd(GetAuctionEndRequest) returns (GetAuctionEndResponse);

  rpc GetAuctionStatus(GetAuctionStatusRequest) returns (GetAuctionStatusResponse);

  rpc GetAuctionWinner(GetAuctionWinnerRequest) returns (GetAuctionWinnerResponse);

  rpc GetBidHistory(GetBidHistoryRequest) returns (GetBidHistoryResponse);

  rpc StartAuction(StartAuctionRequest) returns (StartAuctionResponse);
}