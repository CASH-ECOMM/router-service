syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.ecommerce.payment.grpc";
option java_outer_classname = "PaymentProto";

// Payment Service Definition
service PaymentService {
  rpc ProcessPayment(PaymentRequest) returns (PaymentResponse);
  rpc GetPaymentById(GetPaymentRequest) returns (PaymentResponse);
  rpc CalculateTotalCost(PaymentRequest) returns (TotalCostResponse);
  rpc GetPaymentHistory(PaymentHistoryRequest) returns (PaymentHistoryResponse);
}

// Payment Request Message
message PaymentRequest {
  // User Information
  UserInfo user_info = 1;

  // Item and Cost Information
  int32 item_id = 2;
  int32 item_cost = 3;
  ShippingInfo shipping_info = 4;

  // Credit Card Information
  CreditCardInfo credit_card_info = 5;
}

// User Information
message UserInfo {
  string first_name = 1;
  string last_name = 2;
  string street = 3;
  string number = 4;
  string province = 5;
  string country = 6;
  string postal_code = 7;
  int32 user_id = 8;
}

// Shipping Information
message ShippingInfo {
  ShippingType shipping_type = 1;
  int32 shipping_cost = 2;
  int32 estimated_days = 3;
}

enum ShippingType {
  REGULAR = 0;
  EXPEDITED = 1;
}

// Credit Card Information
message CreditCardInfo {
  string card_number = 1;
  string name_on_card = 2;
  string expiry_date = 3;  // Format: MM/YY
  string security_code = 4;
}

// Payment Response Message
message PaymentResponse {
  bool success = 1;
  int32 payment_id = 2;
  string message = 3;
  ReceiptInfo receipt_info = 4;
  string shipping_message = 5;
  string transaction_date = 6;
}

// Receipt Information
message ReceiptInfo {
  int32  receipt_id = 1;
  string first_name = 2;
  string last_name = 3;
  string full_address = 4;
  int32  item_cost = 5;
  int32  shipping_cost = 6;
  double hst_amount = 7;
  double total_paid = 8;
  int32 item_id = 9;
}

// Get Payment Request
message GetPaymentRequest {
  int32 payment_id = 1;
}
// Payment History Request
message PaymentHistoryRequest {
  int32 user_id = 1;
  int32 page = 2;
  int32 size = 3;
}
// Payment History Response
message PaymentHistoryResponse {
  repeated PaymentResponse payments = 1;
  int32 total_count = 2;
}

message TotalCostResponse {
  int32 item_cost  = 1;
  double hst_rate   = 2;
  double hst_amount = 3;
  double total_cost = 4;
  string message = 5;
}